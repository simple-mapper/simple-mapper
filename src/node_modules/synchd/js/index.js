"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.synchd = synchd;
exports.synchdFn = synchdFn;
var queues = new WeakMap();

function noop() {}

function rethrow(e) {
  throw e;
}

function synchd(scopeKey, fn) {
  var waitOn = queues.get(scopeKey) || Promise.resolve();
  var p = waitOn.then(fn); // The Promise stored in the WeakMap shouldn't contain a value.

  queues.set(scopeKey, p.then(noop, noop)); // An error handler was added above which would prevent the runtime from
  // possibly detecting an uncaught rejection, so we set up a re-throwing
  // error handler which it's up to the caller to attach an error handler to
  // or not.

  return p.catch(rethrow);
}

function synchdFn(scopeKey, fn) {
  return function () {
    var _this = this,
        _arguments = arguments;

    return synchd(scopeKey, function () {
      return fn.apply(_this, _arguments);
    });
  };
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9pbmRleC5qcyJdLCJuYW1lcyI6WyJxdWV1ZXMiLCJXZWFrTWFwIiwibm9vcCIsInJldGhyb3ciLCJlIiwic3luY2hkIiwic2NvcGVLZXkiLCJmbiIsIndhaXRPbiIsImdldCIsIlByb21pc2UiLCJyZXNvbHZlIiwicCIsInRoZW4iLCJzZXQiLCJjYXRjaCIsInN5bmNoZEZuIiwiYXBwbHkiLCJhcmd1bWVudHMiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFFQSxJQUFNQSxNQUFvQyxHQUFHLElBQUlDLE9BQUosRUFBN0M7O0FBRUEsU0FBU0MsSUFBVCxHQUFnQixDQUFFOztBQUVsQixTQUFTQyxPQUFULENBQWlCQyxDQUFqQixFQUFvQjtBQUNsQixRQUFNQSxDQUFOO0FBQ0Q7O0FBRU0sU0FBU0MsTUFBVCxDQUFtQkMsUUFBbkIsRUFBcUNDLEVBQXJDLEVBQXVFO0FBQzVFLE1BQU1DLE1BQU0sR0FBR1IsTUFBTSxDQUFDUyxHQUFQLENBQVdILFFBQVgsS0FBd0JJLE9BQU8sQ0FBQ0MsT0FBUixFQUF2QztBQUNBLE1BQU1DLENBQUMsR0FBR0osTUFBTSxDQUFDSyxJQUFQLENBQVlOLEVBQVosQ0FBVixDQUY0RSxDQUk1RTs7QUFDQVAsRUFBQUEsTUFBTSxDQUFDYyxHQUFQLENBQVdSLFFBQVgsRUFBcUJNLENBQUMsQ0FBQ0MsSUFBRixDQUFPWCxJQUFQLEVBQWFBLElBQWIsQ0FBckIsRUFMNEUsQ0FPNUU7QUFDQTtBQUNBO0FBQ0E7O0FBQ0EsU0FBT1UsQ0FBQyxDQUFDRyxLQUFGLENBQVFaLE9BQVIsQ0FBUDtBQUNEOztBQUVNLFNBQVNhLFFBQVQsQ0FBdURWLFFBQXZELEVBQXlFQyxFQUF6RSxFQUFtRjtBQUN4RixTQUFRLFlBQVc7QUFBQTtBQUFBOztBQUNqQixXQUFPRixNQUFNLENBQUNDLFFBQUQsRUFBVyxZQUFNO0FBQzVCLGFBQU9DLEVBQUUsQ0FBQ1UsS0FBSCxDQUFTLEtBQVQsRUFBZUMsVUFBZixDQUFQO0FBQ0QsS0FGWSxDQUFiO0FBR0QsR0FKRDtBQUtEIiwic291cmNlc0NvbnRlbnQiOlsiLyogQGZsb3cgKi9cblxuY29uc3QgcXVldWVzOiBXZWFrTWFwPE9iamVjdCxQcm9taXNlPGFueT4+ID0gbmV3IFdlYWtNYXAoKTtcblxuZnVuY3Rpb24gbm9vcCgpIHt9XG5cbmZ1bmN0aW9uIHJldGhyb3coZSkge1xuICB0aHJvdyBlO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gc3luY2hkPFI+KHNjb3BlS2V5OiBPYmplY3QsIGZuOiAoKSA9PiBQcm9taXNlPFI+KTogUHJvbWlzZTxSPiB7XG4gIGNvbnN0IHdhaXRPbiA9IHF1ZXVlcy5nZXQoc2NvcGVLZXkpIHx8IFByb21pc2UucmVzb2x2ZSgpO1xuICBjb25zdCBwID0gd2FpdE9uLnRoZW4oZm4pO1xuXG4gIC8vIFRoZSBQcm9taXNlIHN0b3JlZCBpbiB0aGUgV2Vha01hcCBzaG91bGRuJ3QgY29udGFpbiBhIHZhbHVlLlxuICBxdWV1ZXMuc2V0KHNjb3BlS2V5LCBwLnRoZW4obm9vcCwgbm9vcCkpO1xuXG4gIC8vIEFuIGVycm9yIGhhbmRsZXIgd2FzIGFkZGVkIGFib3ZlIHdoaWNoIHdvdWxkIHByZXZlbnQgdGhlIHJ1bnRpbWUgZnJvbVxuICAvLyBwb3NzaWJseSBkZXRlY3RpbmcgYW4gdW5jYXVnaHQgcmVqZWN0aW9uLCBzbyB3ZSBzZXQgdXAgYSByZS10aHJvd2luZ1xuICAvLyBlcnJvciBoYW5kbGVyIHdoaWNoIGl0J3MgdXAgdG8gdGhlIGNhbGxlciB0byBhdHRhY2ggYW4gZXJyb3IgaGFuZGxlciB0b1xuICAvLyBvciBub3QuXG4gIHJldHVybiBwLmNhdGNoKHJldGhyb3cpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gc3luY2hkRm48RjogKC4uLmFyZ3M6IGFueVtdKSA9PiBQcm9taXNlPGFueT4+KHNjb3BlS2V5OiBPYmplY3QsIGZuOiBGKTogRiB7XG4gIHJldHVybiAoZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIHN5bmNoZChzY29wZUtleSwgKCkgPT4ge1xuICAgICAgcmV0dXJuIGZuLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG4gICAgfSk7XG4gIH06IGFueSk7XG59XG4iXX0=